<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZmZgpcXFwnVVVVDFpaWmZbW1vrW1tbuFlZ
        WTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWlofWlpaglpaWtlbW1v/W1tb/1xcXEVaWlp8Wlpaf1tb
        W99bW1vJW1tbOAAAAAAAAAAAAAAAAAAAAABcXFxQW1tb91tbW/9bW1v/W1tb/1tbW/9aWlqhSUlJB1xc
        XKpbW1taW1tb3VtbW75cXFwkAAAAAAAAAAAAAAAAW1tb1VtbW/5bW1vCXFxcclpaWjNXV1cpXFxcJFhY
        WCBgYGAIWlparFxcXFZcXFxFW1tbo1tbW79aWlpmgICAAlxcXMBcXFxAW1tbcFxcXMBbW1v8W1tb/1tb
        W/9bW1v/WlpaglVVVQlZWVk8XFxc6ltbW/9bW1v/W1tb/1xcXHJbW1tXW1tb8FtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9cXFxLXFxcWVtbW/9bW1v/W1tb/1tbW/pcXFzOW1tb0FtbW/9bW1vTW1tbg1pa
        WkddXV00WFhYMVpaWjZaWlo+XFxcGVpaWkpbW1v/W1tb/1tbW21dXV0hW1tbvltbW8hcXFxIW1tbX1pa
        Wq9bW1vrW1tb/ltbW/9bW1v/W1tb+ltbW7NAQEAEW1tbvltbW/9bW1u/XFxciFxcXEBbW1tUW1tb51tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/Wlpad2ZmZgVbW1taWlpabl5eXiYAAAAAWlpay1tb
        W/9bW1vjW1tblFpaWlhbW1tDWlpaM1lZWTlZWVlNW1tba1tbW7lbW1utWlpaYFhYWCAAAAAAAAAAAFtb
        W89bW1tUWlpaT1paWp5bW1vaW1tb71tbW/9bW1v5W1tb5VtbW8dbW1t4WlpaNltbW6NcXFxsAAAAAAAA
        AABYWFhRW1tb01tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/taWlqFWlpaMwAA
        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
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9aWlp8AAAAAAAAAABaWlqvW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbml1dXSFaWlrZW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1xcXLUAAAAAAAAAAFtb
        W9BbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/BbW1vSW1tb/ltbW/9bW1u8W1tbgVtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/ltbW9VaWlqeXFxcelpaWlhaWlpEWlpaNlpaWjNbW1s1WlpaRFpaWlVaWlp3W1tbawAA
        AAAAAAAAW1tbwltbW/9bW1v/W1tb/1tbW/9bW1vdVVVVFQAAAABbW1tXW1tb/1tbW65bW1u7W1tb/1tb
        W/9bW1v/W1tbwltbW2JeXl4TAAAAAAAAAAAAAAAAW1tbDlpaWiJaWlowWlpaM1paWjNaWloiWVlZFwAA
        AAAAAAAAAAAAAAAAAABaWlqCW1tb/1tbW/9bW1v/W1tb/1xcXJYAAAAAAAAAAAAAAAFaWlr4W1tbbVtb
        W8RbW1v/W1tbx1tbWzsAAAAAW1tbDltbW1RaWlqQW1tbx1tbW+tbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb8VtbW8xZWVk5AAAAAGBgYBhbW1vwW1tb/1tbW/9bW1v/W1tb12JiYg0AAAAAWlpaSltb
        W+ZiYmINW1tbxFtbW5hAQEAEW1tbLVtbW6NbW1v1W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW7YAAAAAAAAAAFlZWT9bW1vwW1tb/1tbW/9bW1v/W1tb5ltb
        W8FbW1vkXFxcMgAAAABcXFyIZmZmClxcXJlbW1v9W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1xcXGcAAAAAAAAAAFhYWCBcXFyWW1tb5Ftb
        W+5bW1vgWlpajWBgYBgAAAAAAAAAAF5eXiZcXFzDW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb+VtbW1cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxccltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/NcXFzAXFxcnFxcXHpaWlpmWlpaWFpaWlVbW1tXWlpaZltbW3hbW1uaW1tbvFtbW/FbW1v/W1tb/ltb
        W6NcXFwkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1u3W1tb/1tbW/9bW1v/W1tb4ltb
        W4RdXV00QEBABAAAAAAAAAAAAAAAAAAAAABbW1sOWlpaEVVVVQ8AAAAAAAAAAAAAAAAAAAAAVVVVA1pa
        WjBaWlp/W1tb3VtbW/1aWlrLW1tbnVxcXHoAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW8RbW1v/W1tb31pa
        Wl2AgIACAAAAAFxcXCRbW1toW1tbpVtbW8lbW1vrW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vtWlpay1tb
        W6hcXFxsWVlZKAAAAAAAAAABWlpaVVpaWtlbW1v/W1tb1wAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbxFtb
        W7RbW1sOXl5eE1tbW35bW1vVW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb2ltbW4RcXFwZZmZmCltbW6lbW1vXAAAAAAAAAAAAAAAAAAAAAAAA
        AABbW1udZmZmCltbW2hbW1vuW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/JcXFxySUlJB1tbW6YAAAAAAAAAAAAA
        AAAAAAAAAAAAAF1dXSlcXFyZW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1uoW1tbLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAWVlZYVtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9cXFxyAAAAAAAAAAAAAAAAAAAAAAAAAABbW1uwW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1xcXMMAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWqFbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tbswAAAAAAAAAAAAAAAAAAAAAAAAAAXV1dNFtbW/pbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/1dXV1CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcWVtb
        W/ZbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v6WlpaZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZK1tbW7NbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbvFxcXDIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1dXSxbW1uMXFxc3FtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vgW1tbkVpaWjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcGVxcXFBaWlp0XFxcllxc
        XKpbW1u4W1tbu1tbW7lcXFyqW1tbmFtbW3ZbW1tUWFhYHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/+H////gf//A4H//AGYf/ABzH/gAOY/wD/z58H/+YDHgB0AXAA
        PAHAADgAgAAYAAB/+BwH//gdHgAcHTAADgNAAA8HgAAH/4A/gf8D//w/HwAfHzgAAZ9gAADfgAAAP4AA
        AD8AAAAfAAAAH4AAAD/AAAB/4AAA//gAA///wH//
</value>
  </data>
</root>